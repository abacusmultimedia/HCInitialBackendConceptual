// <auto-generated />
using System;
using DAO.PlanningPortal.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace zero.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221204123017_department")]
    partial class department
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.ActivityLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActivityLogDetailkey")
                        .HasColumnType("int");

                    b.Property<int>("ActivityLogTypekey")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(550)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Userkey")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityLogDetailkey")
                        .IsUnique();

                    b.HasIndex("ActivityLogTypekey");

                    b.HasIndex("Userkey");

                    b.ToTable("ActivityLog");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.ActivityLogDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ActivityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ActivityType")
                        .HasColumnType("int");

                    b.Property<long?>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ActivityLogDetail");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.ActivityLogType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SystemKeyword")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Template")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("ActivityLogType");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.ActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ActivityType");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.AlternativeServiceWorkersforOrdeningGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("OrdeningGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceWorkerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrdeningGroupId");

                    b.HasIndex("ServiceWorkerId");

                    b.ToTable("AlternativeServiceWorkersforOrdeningGroup");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.ApplicationRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("OrganizationUnitId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("OrganizationUnitId");

                    b.HasIndex("TenantId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.ApplicationUserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.BasePlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("OrdeningGroupId")
                        .HasColumnType("int");

                    b.Property<int>("OrdeningNo")
                        .HasColumnType("int");

                    b.Property<bool>("PayforOwnVehicle")
                        .HasColumnType("bit");

                    b.Property<bool>("Return")
                        .HasColumnType("bit");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceWorkerId")
                        .HasColumnType("int");

                    b.Property<int>("TransportTypeId")
                        .HasColumnType("int");

                    b.Property<int>("WeekDayId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrdeningGroupId");

                    b.HasIndex("RouteId");

                    b.HasIndex("ServiceWorkerId");

                    b.HasIndex("TransportTypeId");

                    b.HasIndex("WeekDayId");

                    b.ToTable("BasePlan");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("OrganizationUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationUnitId");

                    b.HasIndex("TenantId");

                    b.ToTable("Configuration");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.DailyPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("OrdeningGroupId")
                        .HasColumnType("int");

                    b.Property<int>("OrdeningNo")
                        .HasColumnType("int");

                    b.Property<bool>("PayforOwnVehicle")
                        .HasColumnType("bit");

                    b.Property<bool>("Return")
                        .HasColumnType("bit");

                    b.Property<int?>("RouteId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceWorkerId")
                        .HasColumnType("int");

                    b.Property<int>("TransportTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrdeningGroupId");

                    b.HasIndex("RouteId");

                    b.HasIndex("ServiceWorkerId");

                    b.HasIndex("TransportTypeId");

                    b.ToTable("DailyPlan");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.DraftPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovedOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DailyPlanDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrganizationUnitId")
                        .HasColumnType("int");

                    b.Property<byte>("PlanType")
                        .HasColumnType("tinyint");

                    b.Property<int>("RequestedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestedOn")
                        .HasColumnType("datetime");

                    b.Property<byte>("StatusId")
                        .HasColumnType("tinyint");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int?>("WeekDayId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationUnitId");

                    b.HasIndex("TenantId");

                    b.HasIndex("WeekDayId");

                    b.ToTable("DraftPlan");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.BrachBalances", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("BranchID")
                        .HasColumnType("bigint");

                    b.Property<long>("LedgerID")
                        .HasColumnType("bigint");

                    b.Property<int>("MyProperty")
                        .HasColumnType("int");

                    b.Property<double>("Opening")
                        .HasColumnType("float");

                    b.Property<double>("OpeningDate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("BrachBalances");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.Branch", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Branch");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.Cities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.Contract", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CostCenterId")
                        .HasColumnType("bigint");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DueDate")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Frequancy")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ItemBatchId")
                        .HasColumnType("bigint");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("LedgerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("NextDueDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("RentAmount")
                        .HasColumnType("float");

                    b.Property<double>("SecurityAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ItemBatchId");

                    b.HasIndex("LedgerId");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.CostCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CostCategory");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.CostCenter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CostCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CostCategoryId");

                    b.ToTable("CostCenter");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ParentID")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentID");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.ItemBatch", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("ParentID")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentID");

                    b.HasIndex("UserId");

                    b.ToTable("ItemBatch");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.ItemGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("ParentID")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentID");

                    b.ToTable("ItemGroup");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.Ledger", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Nature")
                        .HasColumnType("int");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PersonalInfoID")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Userkey")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("PersonalInfoID");

                    b.HasIndex("Userkey");

                    b.ToTable("Ledger");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.LedgerGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("LedgerGroup");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.LedgerSMS", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("IsSent")
                        .HasColumnType("bit");

                    b.Property<long>("LedgerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LedgerId");

                    b.ToTable("LedgerSMS");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.ParentTransaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("ParentTransaction");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.PersonalInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cell")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LatName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NTN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PersonalInfo");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<long>("CostCenterId")
                        .HasColumnType("bigint");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDr")
                        .HasColumnType("bit");

                    b.Property<long?>("ItemBatchId")
                        .HasColumnType("bigint");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("LedgerId")
                        .HasColumnType("bigint");

                    b.Property<long>("ParentTransactionID")
                        .HasColumnType("bigint");

                    b.Property<double>("Qty")
                        .HasColumnType("float");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ItemBatchId");

                    b.HasIndex("LedgerId");

                    b.HasIndex("ParentTransactionID");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.TransactionsAttachments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bucket")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ParentTransactionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ParentTransactionId");

                    b.ToTable("TransactionsAttachments");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.Warehouse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityID");

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.WarehouseStock", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<double>("InwardQty")
                        .HasColumnType("float");

                    b.Property<double>("InwardRate")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long>("ItemBatchID")
                        .HasColumnType("bigint");

                    b.Property<double>("OpeningBalance")
                        .HasColumnType("float");

                    b.Property<double>("OpeningRate")
                        .HasColumnType("float");

                    b.Property<double>("OutwardQty")
                        .HasColumnType("float");

                    b.Property<double>("OutwardRate")
                        .HasColumnType("float");

                    b.Property<long>("WarehouseID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("WarehouseStock");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.GDPR.DataAccessRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessDuration")
                        .HasColumnType("int");

                    b.Property<string>("AdminBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Environment")
                        .HasColumnType("int");

                    b.Property<string>("ReasonInDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReasonToAccessID")
                        .HasColumnType("int");

                    b.Property<string>("RoleID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SystemID")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("ViewedCustomerData")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ReasonToAccessID");

                    b.HasIndex("SystemID");

                    b.HasIndex("UserId");

                    b.ToTable("DataAccessRequest");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.GDPR.ReasonToAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReasonToAccess");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.GDPR.Systems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Systems");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Language", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.OrdeningGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("OrdeningGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OrganizationUnitId")
                        .HasColumnType("int");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationUnitId");

                    b.HasIndex("TenantId");

                    b.ToTable("OrdeningGroup");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.OrganizationUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("OrganizationUnit");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("ALB")
                        .HasColumnType("float");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("DateTime");

                    b.Property<int>("FNR")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("DateTime");

                    b.Property<int>("Mail")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationUnitId")
                        .HasColumnType("int");

                    b.Property<double>("RouteLength")
                        .HasColumnType("float");

                    b.Property<string>("RouteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("RouteSpeed")
                        .HasColumnType("real");

                    b.Property<int>("RouteTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceWorkerId")
                        .HasColumnType("int");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationUnitId");

                    b.HasIndex("RouteTypeId");

                    b.HasIndex("ServiceWorkerId");

                    b.HasIndex("TenantId");

                    b.ToTable("Route");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.RouteType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("RouteType");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.ServiceWorker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("SourceId")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("ServiceWorker");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Tenant");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Translation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<byte>("LanguageId")
                        .HasColumnType("tinyint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("Translation");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.TransportType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TransportType");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.UserOuMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("OrganizationUnitId")
                        .HasColumnType("int");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationUnitId");

                    b.HasIndex("TenantId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOuMapping");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.WeekDays", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("WeekDays");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("POSERP.Entities.INV_MSD_Brand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ActionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprvDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprvTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ApprvUserId")
                        .HasColumnType("int");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("NameAra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortAra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("INV_MSD_Brand");
                });

            modelBuilder.Entity("POSERP.Entities.INV_MSD_Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ActionUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprvDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprvTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ApprvUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("NameAra")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NameEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortAra")
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ShortEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("INV_MSD_Category");
                });

            modelBuilder.Entity("POSERP.Entities.INV_MSD_Color", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ActionUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprvDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprvTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ApprvUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("NameAra")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NameEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortAra")
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ShortEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("INV_MSD_Color");
                });

            modelBuilder.Entity("POSERP.Entities.INV_MSD_Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int?>("ActionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Action_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ApprvDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ApprvTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ApprvUserId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("NameAra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortAra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("INV_MSD_Department");
                });

            modelBuilder.Entity("POSERP.Entities.INV_MSD_Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActionUserId")
                        .HasColumnType("int");

                    b.Property<int>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprvDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ApprvTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ApprvUserId")
                        .HasColumnType("int");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("CatId")
                        .HasColumnType("int");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeptId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DraftedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("EstProfitPer")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("ExpiryDays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsConsignment")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeafult")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExpiration")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPerishable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPrintable")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastActived")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastDelted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastRecall")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModelId")
                        .HasColumnType("int");

                    b.Property<string>("NameAra")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("NameEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PackingSizeID")
                        .HasColumnType("int");

                    b.Property<string>("PackiseSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("ReminderDays")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortAra")
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ShortEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("StockMethodID")
                        .HasColumnType("int");

                    b.Property<int?>("SubCatId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TaxPer")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("CatId");

                    b.ToTable("INV_MSD_Item");
                });

            modelBuilder.Entity("POSERP.Entities.INV_MSD_Model", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ApprovedTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ApprvTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("NameAra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortAra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("INV_MSD_Model");
                });

            modelBuilder.Entity("POSERP.Entities.INV_MSD_SubItemCode", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal?>("AvgPrice")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int?>("CatId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CostPrice")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("EstProfit")
                        .HasColumnType("decimal(18,6)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Qty")
                        .HasColumnType("int");

                    b.Property<decimal?>("Selling_Price")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int?>("Seq")
                        .HasColumnType("int");

                    b.Property<string>("ShortArb")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ShortEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int?>("UnitID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CatId");

                    b.HasIndex("ItemId");

                    b.ToTable("INV_MSD_SubItemCode");
                });

            modelBuilder.Entity("POSERP.Entities.INV_MSD_SubItemPrice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal?>("AvgPrice")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("CostPrice")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("EstProfit")
                        .HasColumnType("decimal(18,6)");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Selling_Price")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("SubItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.ToTable("INV_MSD_SubItemPrice");
                });

            modelBuilder.Entity("POSERP.Entities.Models.ADM_ACC_Bank_Master", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ActionUserId")
                        .HasColumnType("int");

                    b.Property<string>("Addres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ApprvDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ApprvTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ApprvUserId")
                        .HasColumnType("int");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Landmark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POBox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("ShortAra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADM_ACC_Bank_Master");
                });

            modelBuilder.Entity("POSERP.Entities.SD_POS_Invoice", b =>
                {
                    b.Property<long>("DocumentNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DocumentNo"), 1L, 1);

                    b.Property<string>("AccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("ActionTypeId")
                        .HasColumnType("tinyint");

                    b.Property<short?>("ActionUserID")
                        .HasColumnType("smallint");

                    b.Property<byte?>("ApproveID")
                        .HasColumnType("tinyint");

                    b.Property<short?>("BranchID")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("Card")
                        .HasColumnType("decimal(18,6)");

                    b.Property<byte?>("CardTypeID")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Cash")
                        .HasColumnType("decimal(18,6)");

                    b.Property<short?>("CompanyID")
                        .HasColumnType("smallint");

                    b.Property<int?>("CounterNo")
                        .HasColumnType("int");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<DateTime?>("DocumentDate")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("DocumentTypeID")
                        .HasColumnType("tinyint");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<byte?>("ExpTypeID")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceTypeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Items")
                        .HasColumnType("int");

                    b.Property<decimal?>("Net")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("Paid")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int?>("Qty")
                        .HasColumnType("int");

                    b.Property<decimal?>("Refund")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("Round")
                        .HasColumnType("decimal(18,6)");

                    b.Property<byte?>("StatusID")
                        .HasColumnType("tinyint");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("Taxable")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("Void")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("DocumentNo");

                    b.ToTable("SD_POS_Invoice");
                });

            modelBuilder.Entity("POSERP.Entities.SD_POS_InvoiceDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("AvgCost")
                        .HasColumnType("decimal(18,6)");

                    b.Property<short?>("BranchID")
                        .HasColumnType("smallint");

                    b.Property<short?>("CompanyID")
                        .HasColumnType("smallint");

                    b.Property<long?>("DocumentNo")
                        .HasColumnType("bigint");

                    b.Property<long?>("ItemID")
                        .HasColumnType("bigint");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int?>("Qty")
                        .HasColumnType("int");

                    b.Property<long?>("SD_POS_InvoiceDocumentNo")
                        .HasColumnType("bigint");

                    b.Property<short?>("Seq")
                        .HasColumnType("smallint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubitemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal?>("Taxable")
                        .HasColumnType("decimal(18,6)");

                    b.HasKey("Id");

                    b.HasIndex("SD_POS_InvoiceDocumentNo");

                    b.ToTable("SD_POS_InvoiceDetail");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.ActivityLog", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.ActivityLogDetail", "ActivityLogDetail")
                        .WithOne("ActivityLog")
                        .HasForeignKey("DAO.PlanningPortal.Domain.Entities.ActivityLog", "ActivityLogDetailkey")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.ActivityLogType", "ActivityLogType")
                        .WithMany("AdminActivityLogs")
                        .HasForeignKey("ActivityLogTypekey")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("Userkey")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ActivityLogDetail");

                    b.Navigation("ActivityLogType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.AlternativeServiceWorkersforOrdeningGroup", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.OrdeningGroup", "OrdeningGroup")
                        .WithMany()
                        .HasForeignKey("OrdeningGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.ServiceWorker", "ServiceWorker")
                        .WithMany()
                        .HasForeignKey("ServiceWorkerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrdeningGroup");

                    b.Navigation("ServiceWorker");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.ApplicationUser", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.OrganizationUnit", "OrganizationUnit")
                        .WithMany("Users")
                        .HasForeignKey("OrganizationUnitId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Tenant", "Tenant")
                        .WithMany("Users")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("OrganizationUnit");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.ApplicationUserRole", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.BasePlan", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.OrdeningGroup", "OrdeningGroup")
                        .WithMany()
                        .HasForeignKey("OrdeningGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Route", "Route")
                        .WithMany("BasePlans")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.ServiceWorker", "ServiceWorker")
                        .WithMany()
                        .HasForeignKey("ServiceWorkerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.TransportType", "Type")
                        .WithMany()
                        .HasForeignKey("TransportTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.WeekDays", "WeekDay")
                        .WithMany("BasePlans")
                        .HasForeignKey("WeekDayId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrdeningGroup");

                    b.Navigation("Route");

                    b.Navigation("ServiceWorker");

                    b.Navigation("Type");

                    b.Navigation("WeekDay");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Configuration", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.OrganizationUnit", "OrganizationUnit")
                        .WithMany("Configurations")
                        .HasForeignKey("OrganizationUnitId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Tenant", "Tenant")
                        .WithMany("Configurations")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("OrganizationUnit");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.DailyPlan", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.OrdeningGroup", "OrdeningGroup")
                        .WithMany()
                        .HasForeignKey("OrdeningGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Route", "Route")
                        .WithMany("DailyPlans")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.ServiceWorker", "ServiceWorker")
                        .WithMany()
                        .HasForeignKey("ServiceWorkerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.TransportType", "Type")
                        .WithMany()
                        .HasForeignKey("TransportTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrdeningGroup");

                    b.Navigation("Route");

                    b.Navigation("ServiceWorker");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.DraftPlan", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.OrganizationUnit", "OrganizationUnit")
                        .WithMany()
                        .HasForeignKey("OrganizationUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.WeekDays", "WeekDays")
                        .WithMany()
                        .HasForeignKey("WeekDayId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("OrganizationUnit");

                    b.Navigation("Tenant");

                    b.Navigation("WeekDays");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.Contract", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Finance.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.ApplicationUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Finance.ItemBatch", "ItemBatch")
                        .WithMany("Contracts")
                        .HasForeignKey("ItemBatchId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Finance.Ledger", "Ledger")
                        .WithMany()
                        .HasForeignKey("LedgerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CostCenter");

                    b.Navigation("CreatedByUser");

                    b.Navigation("ItemBatch");

                    b.Navigation("Ledger");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.CostCenter", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Finance.CostCategory", "Category")
                        .WithMany("CostCenter")
                        .HasForeignKey("CostCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.Item", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Finance.ItemGroup", "Parent")
                        .WithMany("ChildItem")
                        .HasForeignKey("ParentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.ItemBatch", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Finance.Item", "Parent")
                        .WithMany("Batches")
                        .HasForeignKey("ParentID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.ApplicationUser", "Agent")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Agent");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.ItemGroup", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Finance.ItemGroup", "Parent")
                        .WithMany("ChildGroups")
                        .HasForeignKey("ParentID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.Ledger", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Finance.LedgerGroup", "LedgerGroup")
                        .WithMany("ChildLedgers")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Finance.PersonalInfo", "PersonalInfo")
                        .WithMany()
                        .HasForeignKey("PersonalInfoID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("Userkey")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("LedgerGroup");

                    b.Navigation("PersonalInfo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.LedgerGroup", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Finance.LedgerGroup", "Parent")
                        .WithMany("ChildLedgerGroups")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.LedgerSMS", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Finance.Ledger", "Ledger")
                        .WithMany()
                        .HasForeignKey("LedgerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ledger");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.ParentTransaction", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.ApplicationUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.PersonalInfo", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Finance.Cities", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("City");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.Transaction", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Finance.CostCenter", "CostCenter")
                        .WithMany("Transactions")
                        .HasForeignKey("CostCenterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.ApplicationUser", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Finance.ItemBatch", "ItemBatch")
                        .WithMany("Transactions")
                        .HasForeignKey("ItemBatchId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Finance.Ledger", "Ledger")
                        .WithMany("ChildLedgers")
                        .HasForeignKey("LedgerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Finance.ParentTransaction", "ParentTransaction")
                        .WithMany("Transactions")
                        .HasForeignKey("ParentTransactionID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CostCenter");

                    b.Navigation("CreatedByUser");

                    b.Navigation("ItemBatch");

                    b.Navigation("Ledger");

                    b.Navigation("ParentTransaction");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.TransactionsAttachments", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Finance.ParentTransaction", null)
                        .WithMany("TransactionsAttachments")
                        .HasForeignKey("ParentTransactionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.Warehouse", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Finance.Cities", "City")
                        .WithMany()
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.GDPR.DataAccessRequest", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.GDPR.ReasonToAccess", "ReasonToAccess")
                        .WithMany("DataAccessRequest")
                        .HasForeignKey("ReasonToAccessID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.GDPR.Systems", "SelectedSystem")
                        .WithMany("DataAccessRequest")
                        .HasForeignKey("SystemID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.ApplicationUser", "user")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ReasonToAccess");

                    b.Navigation("SelectedSystem");

                    b.Navigation("user");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.OrdeningGroup", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.OrganizationUnit", "OrganizationUnit")
                        .WithMany()
                        .HasForeignKey("OrganizationUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrganizationUnit");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.OrganizationUnit", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Tenant", "Tenant")
                        .WithMany("OrganizationUnits")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Route", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.OrganizationUnit", "OrganizationUnit")
                        .WithMany()
                        .HasForeignKey("OrganizationUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.RouteType", "RouteType")
                        .WithMany("Routes")
                        .HasForeignKey("RouteTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.ServiceWorker", null)
                        .WithMany("Routes")
                        .HasForeignKey("ServiceWorkerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrganizationUnit");

                    b.Navigation("RouteType");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.ServiceWorker", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Translation", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Language", "Language")
                        .WithMany("Translations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.UserOuMapping", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.OrganizationUnit", "OrganizationUnit")
                        .WithMany()
                        .HasForeignKey("OrganizationUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAO.PlanningPortal.Domain.Entities.ApplicationUser", "User")
                        .WithMany("UserOuMapping")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrganizationUnit");

                    b.Navigation("Tenant");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("DAO.PlanningPortal.Domain.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("POSERP.Entities.INV_MSD_Item", b =>
                {
                    b.HasOne("POSERP.Entities.INV_MSD_Category", "Category")
                        .WithMany()
                        .HasForeignKey("CatId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("POSERP.Entities.INV_MSD_SubItemCode", b =>
                {
                    b.HasOne("POSERP.Entities.INV_MSD_Category", "Category")
                        .WithMany()
                        .HasForeignKey("CatId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("POSERP.Entities.INV_MSD_Item", "Item")
                        .WithMany("INV_MSD_SubItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("POSERP.Entities.SD_POS_InvoiceDetail", b =>
                {
                    b.HasOne("POSERP.Entities.SD_POS_Invoice", "SD_POS_Invoice")
                        .WithMany("SD_POS_InvoiceDetail")
                        .HasForeignKey("SD_POS_InvoiceDocumentNo")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SD_POS_Invoice");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.ActivityLogDetail", b =>
                {
                    b.Navigation("ActivityLog");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.ActivityLogType", b =>
                {
                    b.Navigation("AdminActivityLogs");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.ApplicationUser", b =>
                {
                    b.Navigation("UserOuMapping");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.CostCategory", b =>
                {
                    b.Navigation("CostCenter");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.CostCenter", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.Item", b =>
                {
                    b.Navigation("Batches");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.ItemBatch", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.ItemGroup", b =>
                {
                    b.Navigation("ChildGroups");

                    b.Navigation("ChildItem");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.Ledger", b =>
                {
                    b.Navigation("ChildLedgers");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.LedgerGroup", b =>
                {
                    b.Navigation("ChildLedgerGroups");

                    b.Navigation("ChildLedgers");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Finance.ParentTransaction", b =>
                {
                    b.Navigation("Transactions");

                    b.Navigation("TransactionsAttachments");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.GDPR.ReasonToAccess", b =>
                {
                    b.Navigation("DataAccessRequest");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.GDPR.Systems", b =>
                {
                    b.Navigation("DataAccessRequest");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Language", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.OrganizationUnit", b =>
                {
                    b.Navigation("Configurations");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Route", b =>
                {
                    b.Navigation("BasePlans");

                    b.Navigation("DailyPlans");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.RouteType", b =>
                {
                    b.Navigation("Routes");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.ServiceWorker", b =>
                {
                    b.Navigation("Routes");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.Tenant", b =>
                {
                    b.Navigation("Configurations");

                    b.Navigation("OrganizationUnits");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("DAO.PlanningPortal.Domain.Entities.WeekDays", b =>
                {
                    b.Navigation("BasePlans");
                });

            modelBuilder.Entity("POSERP.Entities.INV_MSD_Item", b =>
                {
                    b.Navigation("INV_MSD_SubItems");
                });

            modelBuilder.Entity("POSERP.Entities.SD_POS_Invoice", b =>
                {
                    b.Navigation("SD_POS_InvoiceDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
